{"version":3,"sources":["assets/icons/close.svg","assets/icons/remove.svg","services/cart/reducer.js","services/cart/actionTypes.js","services/productList/reducer.js","services/reducers.js","services/store.js","components/button/Button.js","components/button/ButtonIcon.js","components/label/MediumLabel.js","components/cart/cartItem/CartItem.js","components/cart/Cart.js","services/cart/actions.js","components/product/Product.js","responsive/Device.js","components/productList/ProductList.js","theme/GlobalStyle.js","containers/RootContainer.js","views/root/App.js","index.js"],"names":["module","exports","initialState","isOpen","products","totalPrice","cartReducer","state","action","type","product","payload","newProductList","productIndex","map","item","id","indexOf","total","price","quantity","push","filter","btnType","productPos","findIndex","data","title","img","productListReducer","combineReducers","cart","productList","store","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","Button","styled","button","color","ButtonIcon","icon","MediumLabel","h3","ItemWrapper","div","ItemImage","InnerWrapper","Title","Price","span","QuantityForm","form","QuantityButton","input","QuantityInput","Remove","CartItem","props","removeProduct","changeProductQuantity","src","alt","value","onClick","disabled","name","remove","CartWrapper","HeadingWrapper","Heading","CloseCart","ItemsWrapper","SummaryWrapper","TotalWrapper","Total","EmptyCart","connect","dispatch","closeCart","clearBasket","removeProductAction","changeProductQuantityAction","cartItems","key","close","length","ProductImg","ProductWrapper","AddToCart","addProduct","addProductAction","size","device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","ProductListWrapper","ProductListLabel","GlobalStyle","createGlobalStyle","ViewWrapper","Blur","AppContainer","productsInCart","quantityButtonHandle","productId","quantityItem","setState","this","React","Component","App","RootContainer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7e0af307.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/close.ea4d4547.svg\";","module.exports = __webpack_public_path__ + \"static/media/remove.67b8cf8c.svg\";","import {\r\n  ADD_PRODUCT,\r\n  REMOVE_PRODUCT,\r\n  CHANGE_PRODUCT_QUANTITY,\r\n  CLOSE_CART,\r\n  CLEAR_BASKET,\r\n} from 'services/cart/actionTypes';\r\n\r\nconst initialState = {\r\n  isOpen: false,\r\n  products: [],\r\n  totalPrice: 0,\r\n};\r\n\r\nconst cartReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_PRODUCT: {\r\n      let product = action.payload;\r\n      const newProductList = state.products;\r\n      const productIndex = newProductList.map(item => item.id).indexOf(product.id);\r\n      const total = state.totalPrice + product.price;\r\n      if (productIndex !== -1) {\r\n        newProductList[productIndex].quantity += 1;\r\n      } else {\r\n        product = { ...product, quantity: 1 };\r\n        newProductList.push(product);\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        products: [...newProductList],\r\n        isOpen: true,\r\n        totalPrice: total,\r\n      };\r\n    }\r\n\r\n    case REMOVE_PRODUCT: {\r\n      const product = action.payload;\r\n      const newProductList = state.products.filter(item => item.id !== product.id);\r\n      const total = state.totalPrice - product.price * product.quantity;\r\n\r\n      return {\r\n        ...state,\r\n        products: [...newProductList],\r\n        totalPrice: total,\r\n      };\r\n    }\r\n\r\n    case CHANGE_PRODUCT_QUANTITY: {\r\n      const { btnType, product } = action.payload;\r\n      const { products, totalPrice } = state;\r\n\r\n      const newProductList = products;\r\n      let total = totalPrice;\r\n\r\n      const productPos = newProductList.findIndex(item => item.id === product.id);\r\n\r\n      if (product.quantity > 1) {\r\n        if (btnType === 'plus') {\r\n          newProductList[productPos].quantity += 1;\r\n          total += newProductList[productPos].price;\r\n        } else {\r\n          newProductList[productPos].quantity -= 1;\r\n          total -= newProductList[productPos].price;\r\n        }\r\n      } else if (product.quantity === 1 && btnType === 'plus') {\r\n        newProductList[productPos].quantity += 1;\r\n        total += newProductList[productPos].price;\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        products: [...newProductList],\r\n        totalPrice: total,\r\n      };\r\n    }\r\n\r\n    case CLOSE_CART:\r\n      return {\r\n        ...state,\r\n        isOpen: false,\r\n      };\r\n\r\n    case CLEAR_BASKET:\r\n      return {\r\n        ...state,\r\n        products: [],\r\n        totalPrice: 0,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cartReducer;\r\n","export const OPEN_CART = 'OPEN_CART';\r\nexport const ADD_PRODUCT = 'ADD_PRODUCT';\r\nexport const REMOVE_PRODUCT = 'REMOVE_PRODUCT';\r\nexport const CHANGE_PRODUCT_QUANTITY = 'CHANGE_PRODUCT_QUANTITY';\r\nexport const CLOSE_CART = 'CLOSE_CART';\r\nexport const CLEAR_BASKET = 'CLEAR_BASKET';\r\n","const initialState = {\r\n  data: [\r\n    {\r\n      id: 1,\r\n      title: 'Jacket',\r\n      price: 379,\r\n      img: 'https://source.unsplash.com/300x400',\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'Jeans',\r\n      price: 249,\r\n      img: 'https://source.unsplash.com/300x400',\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'Sweatshirt',\r\n      price: 79,\r\n      img: 'https://source.unsplash.com/300x400',\r\n    },\r\n    {\r\n      id: 4,\r\n      title: 'Socks',\r\n      price: 24,\r\n      img: 'https://source.unsplash.com/300x400',\r\n    },\r\n    {\r\n      id: 5,\r\n      title: 'Hoody',\r\n      price: 129,\r\n      img: 'https://source.unsplash.com/300x400',\r\n    },\r\n    {\r\n      id: 6,\r\n      title: 'Boots',\r\n      price: 289,\r\n      img: 'https://source.unsplash.com/300x400',\r\n    },\r\n  ],\r\n};\r\n\r\nconst productListReducer = (state = initialState) => {\r\n  return state;\r\n};\r\n\r\nexport default productListReducer;\r\n","import { combineReducers } from 'redux';\r\nimport cartReducer from 'services/cart/reducer';\r\nimport productListReducer from 'services/productList/reducer';\r\n\r\nexport default combineReducers({\r\n  cart: cartReducer,\r\n  productList: productListReducer,\r\n});\r\n","import { createStore } from 'redux';\r\nimport rootReducer from 'services/reducers';\r\n\r\n/* eslint-disable no-underscore-dangle */\r\n\r\nconst store = createStore(\r\n  rootReducer /* preloadedState, */,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n);\r\n\r\n/* eslint-enable */\r\n\r\nexport default store;\r\n","import styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  display: block;\r\n  border: none;\r\n  border-radius: 50px;\r\n  color: white;\r\n  font-weight: 700;\r\n  font-size: 1.3rem;\r\n  letter-spacing: 0.5px;\r\n  text-transform: uppercase;\r\n  padding: 10px 20px;\r\n  margin: 5px 0;\r\n  cursor: pointer;\r\n  transition: 0.2s;\r\n  background-color: ${({ color }) => color || 'hsl(195, 100%, 40%)'};\r\n  &:hover {\r\n    background-color: black;\r\n  }\r\n`;\r\n\r\nexport default Button;\r\n","import styled from 'styled-components';\r\n\r\nconst ButtonIcon = styled.button`\r\n  height: 40px;\r\n  width: 40px;\r\n  background-color: lightgrey;\r\n  color: white;\r\n  border-radius: 50%;\r\n  border: none;\r\n  transition: 0.2s;\r\n  background-image: url(${({ icon }) => icon});\r\n  background-repeat: no-repeat;\r\n  background-position: 50% 50%;\r\n  background-size: 40%;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: black;\r\n  }\r\n`;\r\n\r\nexport default ButtonIcon;\r\n","import styled from 'styled-components';\r\n\r\nconst MediumLabel = styled.h3`\r\n  text-align: center;\r\n  margin: 0 0 5px;\r\n  font-size: 1.4rem;\r\n  font-weight: 700;\r\n`;\r\n\r\nexport default MediumLabel;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport MediumLabel from 'components/label/MediumLabel';\r\nimport ButtonIcon from 'components/button/ButtonIcon';\r\nimport remove from 'assets/icons/remove.svg';\r\n\r\nconst ItemWrapper = styled.div`\r\n  padding: 30px;\r\n  display: grid;\r\n  grid-template-columns: 90px 1fr 40px;\r\n  grid-gap: 15px;\r\n  border-bottom: 1px solid lightgrey;\r\n`;\r\n\r\nconst ItemImage = styled.img`\r\n  width: 100%;\r\n  min-height: 120px;\r\n  display: block;\r\n`;\r\n\r\nconst InnerWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Title = styled(MediumLabel)`\r\n  text-align: left;\r\n  margin: 0;\r\n`;\r\n\r\nconst Price = styled.span`\r\n  text-align: left;\r\n  margin: 5px 0 10px;\r\n  font-size: 1.4rem;\r\n  font-weight: 400;\r\n`;\r\n\r\nconst QuantityForm = styled.form`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 40px);\r\n  grid-template-rows: 40px;\r\n  grid-gap: 3px;\r\n`;\r\n\r\nconst QuantityButton = styled.input`\r\n  border: 1px solid lightgrey;\r\n  background-color: white;\r\n  font-size: 1.4rem;\r\n  transition: 0.2s;\r\n  &:hover {\r\n    color: white;\r\n    background-color: black;\r\n  }\r\n`;\r\n\r\nconst QuantityInput = styled.input`\r\n  border: 1px solid lightgrey;\r\n  background-color: white;\r\n  font-size: 1.4rem;\r\n  text-align: center;\r\n`;\r\n\r\nconst Remove = styled(ButtonIcon)`\r\n  &:hover {\r\n    background-color: red;\r\n  }\r\n`;\r\n\r\nconst CartItem = props => {\r\n  const { removeProduct, changeProductQuantity, product } = props;\r\n  const { id, title, img, price, quantity } = product;\r\n\r\n  return (\r\n    <ItemWrapper>\r\n      <ItemImage src={img} alt={title} />\r\n      <InnerWrapper>\r\n        <Title>{title}</Title>\r\n        <Price>{price}$</Price>\r\n        <QuantityForm>\r\n          <QuantityButton\r\n            type=\"button\"\r\n            value=\"-\"\r\n            onClick={() => changeProductQuantity('minus', product)}\r\n            disabled={product.quantity === 1 && true}\r\n          />\r\n          <QuantityInput type=\"text\" value={quantity} name={id} disabled />\r\n          <QuantityButton\r\n            type=\"button\"\r\n            value=\"+\"\r\n            onClick={() => changeProductQuantity('plus', product)}\r\n          />\r\n        </QuantityForm>\r\n      </InnerWrapper>\r\n      <Remove icon={remove} onClick={() => removeProduct(product)} />\r\n    </ItemWrapper>\r\n  );\r\n};\r\n\r\nCartItem.propTypes = {\r\n  product: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    img: PropTypes.string.isRequired,\r\n    quantity: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n  removeProduct: PropTypes.func.isRequired,\r\n  changeProductQuantity: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CartItem;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport Button from 'components/button/Button';\r\nimport ButtonIcon from 'components/button/ButtonIcon';\r\nimport MediumLabel from 'components/label/MediumLabel';\r\nimport close from 'assets/icons/close.svg';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  closeCart as closeCartAction,\r\n  clearBasket as clearBasketAction,\r\n  removeProduct as removeProductAction,\r\n  changeProductQuantity as changeProductQuantityAction,\r\n} from 'services/cart/actions';\r\nimport CartItem from './cartItem/CartItem';\r\n\r\nconst CartWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 100px 1fr 200px;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  max-width: 500px;\r\n  padding: 0 20px;\r\n  background-color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  transition: 0.4s;\r\n  transform: ${({ isOpen }) => (isOpen ? 'translateX(0)' : 'translateX(100%)')};\r\n  box-shadow: -5px 2px 20px rgba(0, 0, 0, 0.25), 0 0px 0px rgba(0, 0, 0, 0.22);\r\n`;\r\n\r\nconst HeadingWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n  border-bottom: 1px solid lightgrey;\r\n`;\r\n\r\nconst Heading = styled.h3`\r\n  font-size: 1.8rem;\r\n  font-weight: 400;\r\n  margin: 0;\r\n`;\r\n\r\nconst CloseCart = styled(ButtonIcon)`\r\n  position: absolute;\r\n  padding: 0;\r\n  top: 50%;\r\n  right: 0;\r\n  transform: translateY(-50%);\r\n`;\r\n\r\nconst ItemsWrapper = styled.div`\r\n  overflow-y: scroll;\r\n  scrollbar-width: none;\r\n`;\r\n\r\nconst SummaryWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: stretch;\r\n  align-items: stretch;\r\n  padding: 30px 0 10px;\r\n`;\r\n\r\nconst TotalWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: auto;\r\n`;\r\n\r\nconst Total = styled(MediumLabel)`\r\n  font-size: 1.8rem;\r\n  font-weight: 400;\r\n`;\r\n\r\nconst Price = styled(MediumLabel)`\r\n  font-size: 1.8rem;\r\n`;\r\n\r\nconst EmptyCart = styled.span`\r\n  display: block;\r\n  text-align: center;\r\n  font-size: 2rem;\r\n  font-weight: 400;\r\n  color: lightgray;\r\n  padding-top: 80px;\r\n`;\r\n\r\nconst Cart = props => {\r\n  const {\r\n    isOpen,\r\n    products,\r\n    totalPrice,\r\n    closeCart,\r\n    clearBasket,\r\n    removeProduct,\r\n    changeProductQuantity,\r\n  } = props;\r\n\r\n  const cartItems = products.map(product => (\r\n    <CartItem\r\n      key={product.id}\r\n      product={product}\r\n      changeProductQuantity={changeProductQuantity}\r\n      removeProduct={removeProduct}\r\n    />\r\n  ));\r\n  return (\r\n    <CartWrapper isOpen={isOpen}>\r\n      <HeadingWrapper>\r\n        <Heading>Your Cart</Heading>\r\n        <CloseCart icon={close} onClick={closeCart} />\r\n      </HeadingWrapper>\r\n      <ItemsWrapper>\r\n        {cartItems.length ? cartItems : <EmptyCart>Your cart is empty...</EmptyCart>}\r\n      </ItemsWrapper>\r\n      <SummaryWrapper>\r\n        <TotalWrapper>\r\n          <Total>Total</Total>\r\n          <Price>{totalPrice}$</Price>\r\n        </TotalWrapper>\r\n        <Button>Checkout</Button>\r\n        <Button color=\"grey\" onClick={clearBasket}>\r\n          Clear basket\r\n        </Button>\r\n      </SummaryWrapper>\r\n    </CartWrapper>\r\n  );\r\n};\r\n\r\nCart.propTypes = {\r\n  isOpen: PropTypes.bool.isRequired,\r\n  products: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  closeCart: PropTypes.func.isRequired,\r\n  clearBasket: PropTypes.func.isRequired,\r\n  totalPrice: PropTypes.number.isRequired,\r\n  removeProduct: PropTypes.func.isRequired,\r\n  changeProductQuantity: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const { isOpen, products, totalPrice } = state.cart;\r\n  return { isOpen, products, totalPrice };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  closeCart: () => dispatch(closeCartAction()),\r\n  clearBasket: () => dispatch(clearBasketAction()),\r\n  removeProduct: product => dispatch(removeProductAction(product)),\r\n  changeProductQuantity: (btnType, product) =>\r\n    dispatch(changeProductQuantityAction(btnType, product)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\r\n","import {\r\n  ADD_PRODUCT,\r\n  REMOVE_PRODUCT,\r\n  CHANGE_PRODUCT_QUANTITY,\r\n  CLOSE_CART,\r\n  CLEAR_BASKET,\r\n} from 'services/cart/actionTypes';\r\n\r\nexport const addProduct = product => ({\r\n  type: ADD_PRODUCT,\r\n  payload: product,\r\n});\r\n\r\nexport const removeProduct = product => ({\r\n  type: REMOVE_PRODUCT,\r\n  payload: product,\r\n});\r\n\r\nexport const changeProductQuantity = (btnType, product) => ({\r\n  type: CHANGE_PRODUCT_QUANTITY,\r\n  payload: { btnType, product },\r\n});\r\n\r\nexport const closeCart = () => ({\r\n  type: CLOSE_CART,\r\n});\r\n\r\nexport const clearBasket = () => ({\r\n  type: CLEAR_BASKET,\r\n});\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n// import AppContext from 'context';\r\nimport PropTypes from 'prop-types';\r\nimport Button from 'components/button/Button';\r\nimport MediumLabel from 'components/label/MediumLabel';\r\nimport { connect } from 'react-redux';\r\nimport { addProduct as addProductAction } from 'services/cart/actions';\r\n\r\nconst ProductImg = styled.img`\r\n  min-height: 400px;\r\n  display: block;\r\n`;\r\n\r\nconst ProductWrapper = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\r\n`;\r\n\r\nconst InnerWrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  padding: 20px;\r\n  background-color: rgba(255, 255, 255, 1);\r\n`;\r\n\r\nconst Price = styled.span`\r\n  display: block;\r\n  text-align: center;\r\n  margin: 0 0 20px;\r\n  font-size: 1.4rem;\r\n  font-weight: 400;\r\n`;\r\n\r\nconst AddToCart = styled(Button)`\r\n  width: 100%;\r\n`;\r\n\r\nconst Product = props => {\r\n  const { product, addProduct } = props;\r\n  const { title, price, img } = product;\r\n  return (\r\n    <ProductWrapper>\r\n      <ProductImg src={img} alt={title} />\r\n      <InnerWrapper>\r\n        <MediumLabel>{title}</MediumLabel>\r\n        <Price>{price}$</Price>\r\n        <AddToCart onClick={() => addProduct(product)}>Add to cart</AddToCart>\r\n      </InnerWrapper>\r\n    </ProductWrapper>\r\n  );\r\n};\r\n\r\nProduct.propTypes = {\r\n  product: PropTypes.shape({\r\n    title: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    img: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  addProduct: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addProduct: product => dispatch(addProductAction(product)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Product);\r\n","const size = {\r\n  mobileS: '320px',\r\n  mobileM: '375px',\r\n  mobileL: '425px',\r\n  tablet: '768px',\r\n  laptop: '1024px',\r\n  laptopL: '1440px',\r\n  desktop: '2560px',\r\n};\r\n\r\nconst device = {\r\n  mobileS: `(min-width: ${size.mobileS})`,\r\n  mobileM: `(min-width: ${size.mobileM})`,\r\n  mobileL: `(min-width: ${size.mobileL})`,\r\n  tablet: `(min-width: ${size.tablet})`,\r\n  laptop: `(min-width: ${size.laptop})`,\r\n  laptopL: `(min-width: ${size.laptopL})`,\r\n  desktop: `(min-width: ${size.desktop})`,\r\n  desktopL: `(min-width: ${size.desktop})`,\r\n};\r\n\r\nexport default device;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport MediumLabel from 'components/label/MediumLabel';\r\nimport PropTypes from 'prop-types';\r\nimport Product from 'components/product/Product';\r\nimport device from 'responsive/Device';\r\nimport { connect } from 'react-redux';\r\n\r\nconst ProductListWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(1, 300px);\r\n  justify-content: center;\r\n  grid-gap: 30px;\r\n  position: relative;\r\n  max-width: 1500px;\r\n  margin: 0 auto;\r\n  @media ${device.tablet} {\r\n    grid-template-columns: repeat(2, 300px);\r\n  }\r\n  @media ${device.laptop} {\r\n    grid-template-columns: repeat(3, 300px);\r\n  }\r\n  @media ${device.laptopL} {\r\n    grid-template-columns: repeat(4, 300px);\r\n  }\r\n`;\r\n\r\nconst ProductListLabel = styled(MediumLabel)`\r\n  text-align: left;\r\n  font-size: 3rem;\r\n  color: hsl(195, 100%, 40%);\r\n  padding: 40px 20px;\r\n  max-width: 1500px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst ProductList = ({ data }) => {\r\n  const products = data.map(product => <Product key={product.id} product={product} />);\r\n  return (\r\n    <>\r\n      <ProductListLabel>React Shopping Cart</ProductListLabel>\r\n      <ProductListWrapper>{products}</ProductListWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nProductList.propTypes = {\r\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const { data } = state.productList;\r\n  return { data };\r\n  //  zwraca obiekt z propsem który zostanie podany do tego komponentu\r\n};\r\n//  można to zapisac też w krótszy sposób:\r\n//  const mapStateToProps = ({data}) => ({data});\r\n\r\nexport default connect(mapStateToProps)(ProductList);\r\n// connect przyjmuje z prawej strony komponent a z lewej mapStateToProps oraz mapDispatchToProps\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\r\n@import url('https://fonts.googleapis.com/css?family=Montserrat:300,700&display=swap');\r\n\r\n*,\r\n*::before,\r\n*::after {\r\n  box-sizing: border-box;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n  html {\r\n    font-size: 62.5%;\r\n  }\r\n\r\n  body {\r\n    font-size: 1.6rem;\r\n    font-family: 'Montserrat', sans-serif;\r\n  }\r\n\r\n  #root{\r\n    position: relative;\r\n  }\r\n\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport Cart from 'components/cart/Cart';\r\nimport ProductList from 'components/productList/ProductList';\r\nimport GlobalStyle from 'theme/GlobalStyle';\r\nimport { connect } from 'react-redux';\r\n\r\nconst ViewWrapper = styled.div`\r\n  position: relative;\r\n  background-color: white;\r\n`;\r\n\r\nconst Blur = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  transition: 0.2s;\r\n  opacity: ${({ isOpen }) => (isOpen ? 1 : 0)};\r\n  visibility: ${({ isOpen }) => (isOpen ? 'visible' : 'hidden')};\r\n  background-color: rgba(0, 0, 0, 0.9);\r\n`;\r\n\r\nclass AppContainer extends React.Component {\r\n  state = {\r\n    productsInCart: [],\r\n    totalPrice: 0,\r\n  };\r\n\r\n  quantityButtonHandle = (btnType, productId) => {\r\n    let { totalPrice } = this.state;\r\n    const { productsInCart } = this.state;\r\n\r\n    const productPos = productsInCart.findIndex(product => product.id === productId);\r\n\r\n    const quantityItem = productsInCart[productPos].quantity;\r\n\r\n    if (quantityItem > 1) {\r\n      if (btnType === 'plus') {\r\n        productsInCart[productPos].quantity += 1;\r\n        totalPrice += productsInCart[productPos].price;\r\n      } else {\r\n        productsInCart[productPos].quantity -= 1;\r\n        totalPrice -= productsInCart[productPos].price;\r\n      }\r\n    } else if (quantityItem === 1 && btnType === 'plus') {\r\n      productsInCart[productPos].quantity += 1;\r\n      totalPrice += productsInCart[productPos].price;\r\n    }\r\n\r\n    this.setState({\r\n      productsInCart,\r\n      totalPrice,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { isOpen } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <ViewWrapper>\r\n          <ProductList />\r\n          <Blur isOpen={isOpen} />\r\n        </ViewWrapper>\r\n        <Cart />\r\n        <GlobalStyle />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nAppContainer.propTypes = {\r\n  isOpen: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const { isOpen } = state.cart;\r\n  return { isOpen };\r\n};\r\n\r\nexport default connect(mapStateToProps)(AppContainer);\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from 'services/store';\r\nimport RootContainer from 'containers/RootContainer';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <RootContainer />\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from 'views/root/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}