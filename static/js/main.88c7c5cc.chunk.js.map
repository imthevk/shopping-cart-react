{"version":3,"sources":["assets/icons/close.svg","assets/img/dress.jpg","assets/img/hoody.jpg","assets/img/jacket.jpg","assets/img/jeans.jpg","assets/img/jogger.jpg","assets/img/shirt.jpg","assets/img/sweatshirt.jpg","assets/img/tshirt.jpg","assets/icons/remove.svg","assets/icons/arrow-down.svg","assets/icons/cart.svg","services/cart/reducer.js","services/actionTypes.js","data/index.js","services/productList/reducer.js","services/reducers.js","services/store.js","components/button/Button.js","components/button/ButtonIcon.js","components/label/MediumLabel.js","components/cart/cartItem/CartItem.js","components/cart/Cart.js","services/cart/actions.js","components/productList/filters/Filters.js","responsive/Device.js","components/productList/sort/Sort.js","components/product/Product.js","components/productList/ProductList.js","services/productList/actions.js","theme/GlobalStyle.js","containers/RootContainer.js","views/root/App.js","index.js"],"names":["module","exports","initialState","isCartOpen","products","totalPrice","cartReducer","state","action","type","payload","newProductList","priceToAdd","priceToRemove","priceToChange","dataProducts","id","title","price","sizes","colors","img","jacket","addedDate","jeans","sweatshirt","tshirt","hoody","dress","jogger","shirt","data","isFiltersOpen","activeFilters","productListReducer","newActiveFilters","combineReducers","cart","productList","store","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","Button","styled","button","color","ButtonIcon","icon","MediumLabel","h3","ItemWrapper","div","ItemImage","InnerWrapper","Title","Price","span","QuantityForm","form","QuantityButton","input","QuantityInput","Remove","CartItem","props","removeProduct","changeProductQuantity","product","quantity","src","alt","value","onClick","disabled","name","remove","CartWrapper","HeadingWrapper","Heading","CloseCart","ItemsWrapper","SummaryWrapper","TotalWrapper","Total","EmptyCart","connect","dispatch","closeCart","clearBasket","filter","item","removeProductAction","btnType","index","findIndex","changeProductQuantityAction","renderItems","length","map","key","close","FiltersWrapper","CloseFilters","FilterList","FilterWrapper","FilterLabel","h4","OptionsWrapper","Option","active","filters","Filters","openFilters","filterProducts","useState","activeFilter","setActiveFilter","handleActiveFilter","filterType","newActiveFilter","includes","push","size","device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","options","label","SortWrapper","SortSelect","select","arrowDown","SortOption","option","Sort","sortProducts","createOptions","onChange","e","target","ProductImg","ProductWrapper","AddToCart","AvailableOptionsWrapper","AvailableOptionsLabel","AvailableOption","addProduct","indexOf","newProduct","addProductAction","availableColors","availableSizes","ProductListWrapper","ProductListLabel","FilterBar","FilterButton","sort","a","b","sortProductsAction","isRange","allProducts","activeFiltersKeys","Object","keys","forEach","incomingProductId","isProductRepeat","some","filterProductsAction","GlobalStyle","createGlobalStyle","ViewWrapper","Blur","CartButton","openCart","App","RootContainer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.88c7c5cc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/close.ea4d4547.svg\";","module.exports = __webpack_public_path__ + \"static/media/dress.7234c5a7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hoody.33ca7b77.jpg\";","module.exports = __webpack_public_path__ + \"static/media/jacket.cc21c5fd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/jeans.ebdaa7f4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/jogger.ebbbadec.jpg\";","module.exports = __webpack_public_path__ + \"static/media/shirt.346a7bb0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sweatshirt.9a08e3db.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tshirt.21a4e3b6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/remove.67b8cf8c.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow-down.63fbce54.svg\";","module.exports = __webpack_public_path__ + \"static/media/cart.0de0451e.svg\";","import {\r\n  ADD_PRODUCT,\r\n  REMOVE_PRODUCT,\r\n  CHANGE_PRODUCT_QUANTITY,\r\n  CLOSE_CART,\r\n  OPEN_CART,\r\n  CLEAR_BASKET,\r\n} from 'services/actionTypes';\r\n\r\nconst initialState = {\r\n  isCartOpen: false,\r\n  products: [],\r\n  totalPrice: 0,\r\n};\r\n\r\nconst cartReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_PRODUCT: {\r\n      return {\r\n        ...state,\r\n        products: action.payload.newProductList,\r\n        isCartOpen: true,\r\n        totalPrice: state.totalPrice + action.payload.priceToAdd,\r\n      };\r\n    }\r\n\r\n    case REMOVE_PRODUCT: {\r\n      return {\r\n        ...state,\r\n        products: action.payload.newProductList,\r\n        totalPrice: state.totalPrice - action.payload.priceToRemove,\r\n      };\r\n    }\r\n\r\n    case CHANGE_PRODUCT_QUANTITY: {\r\n      return {\r\n        ...state,\r\n        products: action.payload.newProductList,\r\n        totalPrice: state.totalPrice + action.payload.priceToChange,\r\n      };\r\n    }\r\n\r\n    case OPEN_CART: {\r\n      return {\r\n        ...state,\r\n        isCartOpen: true,\r\n      };\r\n    }\r\n\r\n    case CLOSE_CART:\r\n      return {\r\n        ...state,\r\n        isCartOpen: false,\r\n      };\r\n\r\n    case CLEAR_BASKET:\r\n      return {\r\n        ...state,\r\n        products: [],\r\n        totalPrice: 0,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cartReducer;\r\n","// cart actions\r\nexport const OPEN_CART = 'OPEN_CART';\r\nexport const ADD_PRODUCT = 'ADD_PRODUCT';\r\nexport const REMOVE_PRODUCT = 'REMOVE_PRODUCT';\r\nexport const CHANGE_PRODUCT_QUANTITY = 'CHANGE_PRODUCT_QUANTITY';\r\nexport const CLOSE_CART = 'CLOSE_CART';\r\nexport const CLEAR_BASKET = 'CLEAR_BASKET';\r\n\r\n// product list actions\r\nexport const SORT_PRODUCTS = 'SORT_PRODUCTS';\r\nexport const OPEN_FILTERS = 'OPEN_FILTERS';\r\nexport const FILTER_PRODUCTS = 'FILTER_PRODUCTS';\r\nexport const SET_PRICE_RANGE = 'SET_PRICE_RANGE';\r\nexport const REMOVE_PRICE_RANGE = 'REMOVE_PRICE_RANGE';\r\n","import dress from 'assets/img/dress.jpg';\r\nimport hoody from 'assets/img/hoody.jpg';\r\nimport jacket from 'assets/img/jacket.jpg';\r\nimport jeans from 'assets/img/jeans.jpg';\r\nimport jogger from 'assets/img/jogger.jpg';\r\nimport shirt from 'assets/img/shirt.jpg';\r\nimport sweatshirt from 'assets/img/sweatshirt.jpg';\r\nimport tshirt from 'assets/img/tshirt.jpg';\r\n\r\nconst dataProducts = [\r\n  {\r\n    id: 1,\r\n    title: 'Jacket',\r\n    price: 379,\r\n    sizes: ['XS', 'S', 'M', 'L', 'XL', 'XXL'],\r\n    colors: ['red', 'green', 'blue', 'gray', 'black', 'white'],\r\n    img: jacket,\r\n    addedDate: 1578787200 /* mm/dd/yyyy 01/12/2020 */,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Jeans',\r\n    price: 249,\r\n    sizes: ['XS', 'XXL'],\r\n    colors: ['red', 'green', 'blue', 'yellow', 'orange'],\r\n    img: jeans,\r\n    addedDate: 1566259200 /* 08/20/2019 */,\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Sweatshirt',\r\n    price: 79,\r\n    sizes: ['S', 'M', 'L'],\r\n    colors: ['black', 'white'],\r\n    img: sweatshirt,\r\n    addedDate: 1575504000 /* 12/05/2019 */,\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Tshirt',\r\n    price: 24,\r\n    sizes: ['S', 'L', 'XXL'],\r\n    colors: ['red', 'blue', 'orange', 'pink', 'black', 'white'],\r\n    img: tshirt,\r\n    addedDate: 1581638400 /* 02/14/2020 */,\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Hoody',\r\n    price: 129,\r\n    sizes: ['XL', 'XXL'],\r\n    colors: ['blue', 'yellow', 'orange', 'pink', 'gray'],\r\n    img: hoody,\r\n    addedDate: 1556755200 /* 05/02/2019 */,\r\n  },\r\n  {\r\n    id: 6,\r\n    title: 'Dress',\r\n    price: 289,\r\n    sizes: ['XS', 'S'],\r\n    colors: ['red', 'green', 'yellow', 'orange', 'gray', 'black'],\r\n    img: dress,\r\n    addedDate: 1562284800 /* 07/05/2019 */,\r\n  },\r\n  {\r\n    id: 7,\r\n    title: 'Jogger',\r\n    price: 289,\r\n    sizes: ['XS', 'S'],\r\n    colors: ['red', 'green', 'yellow', 'orange', 'gray', 'black'],\r\n    img: jogger,\r\n    addedDate: 1562284800 /* 07/05/2019 */,\r\n  },\r\n  {\r\n    id: 8,\r\n    title: 'Shirt',\r\n    price: 289,\r\n    sizes: ['XS', 'S'],\r\n    colors: ['red', 'green', 'yellow', 'orange', 'gray', 'black'],\r\n    img: shirt,\r\n    addedDate: 1562284800 /* 07/05/2019 */,\r\n  },\r\n];\r\n\r\nexport default dataProducts;\r\n","import { SORT_PRODUCTS, OPEN_FILTERS, FILTER_PRODUCTS } from 'services/actionTypes';\r\nimport dataProducts from 'data';\r\n\r\nconst initialState = {\r\n  data: dataProducts,\r\n  isFiltersOpen: false,\r\n  activeFilters: {},\r\n};\r\n\r\nconst productListReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SORT_PRODUCTS: {\r\n      return {\r\n        ...state,\r\n        data: [...action.payload],\r\n      };\r\n    }\r\n\r\n    case OPEN_FILTERS:\r\n      return {\r\n        ...state,\r\n        isFiltersOpen: !state.isFiltersOpen,\r\n      };\r\n\r\n    case FILTER_PRODUCTS: {\r\n      return {\r\n        ...state,\r\n        data: action.payload.newProductList,\r\n        activeFilters: action.payload.newActiveFilters,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default productListReducer;\r\n","import { combineReducers } from 'redux';\r\nimport cartReducer from 'services/cart/reducer';\r\nimport productListReducer from 'services/productList/reducer';\r\n\r\nexport default combineReducers({\r\n  cart: cartReducer,\r\n  productList: productListReducer,\r\n});\r\n","import { createStore } from 'redux';\r\nimport rootReducer from 'services/reducers';\r\n\r\n/* eslint-disable no-underscore-dangle */\r\n\r\nconst store = createStore(\r\n  rootReducer /* preloadedState, */,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n);\r\n\r\n/* eslint-enable */\r\n\r\nexport default store;\r\n","import styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  display: block;\r\n  border: none;\r\n  border-radius: 50px;\r\n  color: white;\r\n  font-weight: 700;\r\n  font-size: 1.3rem;\r\n  letter-spacing: 0.5px;\r\n  text-transform: uppercase;\r\n  padding: 10px 20px;\r\n  margin: 5px 0;\r\n  cursor: pointer;\r\n  transition: 0.2s;\r\n  background-color: ${({ color }) => color || 'hsl(195, 100%, 40%)'};\r\n  &:hover {\r\n    background-color: black;\r\n  }\r\n`;\r\n\r\nexport default Button;\r\n","import styled from 'styled-components';\r\n\r\nconst ButtonIcon = styled.button`\r\n  height: 40px;\r\n  width: 40px;\r\n  background-color: lightgrey;\r\n  color: white;\r\n  border-radius: 50%;\r\n  border: none;\r\n  transition: 0.2s;\r\n  background-image: url(${({ icon }) => icon});\r\n  background-repeat: no-repeat;\r\n  background-position: 50% 50%;\r\n  background-size: 40%;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: black;\r\n  }\r\n`;\r\n\r\nexport default ButtonIcon;\r\n","import styled from 'styled-components';\r\n\r\nconst MediumLabel = styled.h3`\r\n  text-align: center;\r\n  margin: 0 0 5px;\r\n  font-size: 1.4rem;\r\n  font-weight: 700;\r\n`;\r\n\r\nexport default MediumLabel;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport MediumLabel from 'components/label/MediumLabel';\r\nimport ButtonIcon from 'components/button/ButtonIcon';\r\nimport remove from 'assets/icons/remove.svg';\r\n\r\nconst ItemWrapper = styled.div`\r\n  padding: 30px;\r\n  display: grid;\r\n  grid-template-columns: 90px 1fr 40px;\r\n  grid-gap: 15px;\r\n  border-bottom: 1px solid lightgrey;\r\n`;\r\n\r\nconst ItemImage = styled.img`\r\n  width: 100%;\r\n  min-height: 120px;\r\n  display: block;\r\n`;\r\n\r\nconst InnerWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Title = styled(MediumLabel)`\r\n  text-align: left;\r\n  margin: 0;\r\n`;\r\n\r\nconst Price = styled.span`\r\n  text-align: left;\r\n  margin: 5px 0 10px;\r\n  font-size: 1.4rem;\r\n  font-weight: 400;\r\n`;\r\n\r\nconst QuantityForm = styled.form`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 40px);\r\n  grid-template-rows: 40px;\r\n  grid-gap: 3px;\r\n`;\r\n\r\nconst QuantityButton = styled.input`\r\n  border: 1px solid lightgrey;\r\n  background-color: white;\r\n  font-size: 1.4rem;\r\n  transition: 0.2s;\r\n  &:hover {\r\n    color: white;\r\n    background-color: black;\r\n  }\r\n`;\r\n\r\nconst QuantityInput = styled.input`\r\n  border: 1px solid lightgrey;\r\n  background-color: white;\r\n  font-size: 1.4rem;\r\n  text-align: center;\r\n`;\r\n\r\nconst Remove = styled(ButtonIcon)`\r\n  &:hover {\r\n    background-color: red;\r\n  }\r\n`;\r\n\r\nconst CartItem = props => {\r\n  const { removeProduct, changeProductQuantity, product, products } = props;\r\n  const { id, title, img, price, quantity } = product;\r\n  return (\r\n    <ItemWrapper>\r\n      <ItemImage src={img} alt={title} />\r\n      <InnerWrapper>\r\n        <Title>{title}</Title>\r\n        <Price>{price}$</Price>\r\n        <QuantityForm>\r\n          <QuantityButton\r\n            type=\"button\"\r\n            value=\"-\"\r\n            onClick={() => changeProductQuantity('minus', product, products)}\r\n            disabled={product.quantity === 1 && true}\r\n          />\r\n          <QuantityInput type=\"text\" value={quantity} name={id} disabled />\r\n          <QuantityButton\r\n            type=\"button\"\r\n            value=\"+\"\r\n            onClick={() => changeProductQuantity('plus', product, products)}\r\n          />\r\n        </QuantityForm>\r\n      </InnerWrapper>\r\n      <Remove icon={remove} onClick={() => removeProduct(product, products)} />\r\n    </ItemWrapper>\r\n  );\r\n};\r\n\r\nCartItem.propTypes = {\r\n  product: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    img: PropTypes.string.isRequired,\r\n    quantity: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n  removeProduct: PropTypes.func.isRequired,\r\n  changeProductQuantity: PropTypes.func.isRequired,\r\n  products: PropTypes.arrayOf(PropTypes.shape()).isRequired,\r\n};\r\n\r\nexport default CartItem;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport Button from 'components/button/Button';\r\nimport ButtonIcon from 'components/button/ButtonIcon';\r\nimport MediumLabel from 'components/label/MediumLabel';\r\nimport close from 'assets/icons/close.svg';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  removeProduct as removeProductAction,\r\n  changeProductQuantity as changeProductQuantityAction,\r\n  closeCart as closeCartAction,\r\n  clearBasket as clearBasketAction,\r\n} from 'services/cart/actions';\r\nimport CartItem from './cartItem/CartItem';\r\n\r\nconst CartWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 100px 1fr 200px;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  max-width: 500px;\r\n  padding: 0 20px;\r\n  background-color: white;\r\n  position: fixed;\r\n  z-index: 99999;\r\n  top: 0;\r\n  right: 0;\r\n  transition: 0.4s;\r\n  transform: ${({ isCartOpen }) => (isCartOpen ? 'translateX(0)' : 'translateX(100%)')};\r\n  box-shadow: -5px 2px 20px rgba(0, 0, 0, 0.25), 0 0px 0px rgba(0, 0, 0, 0.22);\r\n`;\r\n\r\nconst HeadingWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n  border-bottom: 1px solid lightgrey;\r\n`;\r\n\r\nconst Heading = styled.h3`\r\n  font-size: 1.8rem;\r\n  font-weight: 400;\r\n  margin: 0;\r\n`;\r\n\r\nconst CloseCart = styled(ButtonIcon)`\r\n  position: absolute;\r\n  padding: 0;\r\n  top: 50%;\r\n  right: 0;\r\n  transform: translateY(-50%);\r\n`;\r\n\r\nconst ItemsWrapper = styled.div`\r\n  overflow-y: scroll;\r\n  scrollbar-width: none;\r\n`;\r\n\r\nconst SummaryWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: stretch;\r\n  align-items: stretch;\r\n  padding: 30px 0 10px;\r\n`;\r\n\r\nconst TotalWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: auto;\r\n`;\r\n\r\nconst Total = styled(MediumLabel)`\r\n  font-size: 1.8rem;\r\n  font-weight: 400;\r\n`;\r\n\r\nconst Price = styled(MediumLabel)`\r\n  font-size: 1.8rem;\r\n`;\r\n\r\nconst EmptyCart = styled.span`\r\n  display: block;\r\n  text-align: center;\r\n  font-size: 2rem;\r\n  font-weight: 400;\r\n  color: lightgray;\r\n  padding-top: 80px;\r\n`;\r\n\r\nconst Cart = props => {\r\n  const {\r\n    isCartOpen,\r\n    products,\r\n    totalPrice,\r\n    closeCart,\r\n    clearBasket,\r\n    removeProduct,\r\n    changeProductQuantity,\r\n  } = props;\r\n  let renderItems;\r\n  if (products.length !== 0) {\r\n    renderItems = products.map(product => (\r\n      <CartItem\r\n        key={product.id}\r\n        product={product}\r\n        products={products}\r\n        changeProductQuantity={changeProductQuantity}\r\n        removeProduct={removeProduct}\r\n      />\r\n    ));\r\n  } else {\r\n    renderItems = <EmptyCart>Your cart is empty...</EmptyCart>;\r\n  }\r\n  return (\r\n    <CartWrapper isCartOpen={isCartOpen}>\r\n      <HeadingWrapper>\r\n        <Heading>Your Cart</Heading>\r\n        <CloseCart icon={close} onClick={closeCart} />\r\n      </HeadingWrapper>\r\n      <ItemsWrapper>{renderItems}</ItemsWrapper>\r\n      <SummaryWrapper>\r\n        <TotalWrapper>\r\n          <Total>Total</Total>\r\n          <Price>{totalPrice}$</Price>\r\n        </TotalWrapper>\r\n        <Button>Checkout</Button>\r\n        <Button color=\"grey\" onClick={clearBasket}>\r\n          Clear basket\r\n        </Button>\r\n      </SummaryWrapper>\r\n    </CartWrapper>\r\n  );\r\n};\r\n\r\nCart.propTypes = {\r\n  isCartOpen: PropTypes.bool.isRequired,\r\n  products: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  closeCart: PropTypes.func.isRequired,\r\n  clearBasket: PropTypes.func.isRequired,\r\n  totalPrice: PropTypes.number.isRequired,\r\n  removeProduct: PropTypes.func.isRequired,\r\n  changeProductQuantity: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isCartOpen: state.cart.isCartOpen,\r\n  products: state.cart.products,\r\n  totalPrice: state.cart.totalPrice,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  closeCart: () => dispatch(closeCartAction()),\r\n  clearBasket: () => dispatch(clearBasketAction()),\r\n  removeProduct: (product, products) => dispatch(removeProductAction(product, products)),\r\n  changeProductQuantity: (btnType, product, products) =>\r\n    dispatch(changeProductQuantityAction(btnType, product, products)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\r\n","import {\r\n  ADD_PRODUCT,\r\n  REMOVE_PRODUCT,\r\n  CHANGE_PRODUCT_QUANTITY,\r\n  OPEN_CART,\r\n  CLOSE_CART,\r\n  CLEAR_BASKET,\r\n} from 'services/actionTypes';\r\n\r\nexport const addProduct = (product, products) => {\r\n  const index = products.map(item => item.id).indexOf(product.id);\r\n  const newProductList = products;\r\n  const priceToAdd = product.price;\r\n  if (index !== -1) {\r\n    newProductList[index].quantity += 1;\r\n  } else {\r\n    const newProduct = { ...product, quantity: 1 };\r\n    newProductList.push(newProduct);\r\n  }\r\n  return {\r\n    type: ADD_PRODUCT,\r\n    payload: { newProductList, priceToAdd },\r\n  };\r\n};\r\n\r\nexport const removeProduct = (product, products) => {\r\n  const newProductList = products.filter(item => item.id !== product.id);\r\n  const priceToRemove = product.price * product.quantity;\r\n  return {\r\n    type: REMOVE_PRODUCT,\r\n    payload: { newProductList, priceToRemove },\r\n  };\r\n};\r\n\r\nexport const changeProductQuantity = (btnType, product, products) => {\r\n  const newProductList = products;\r\n  let priceToChange = product.price;\r\n  const index = newProductList.findIndex(item => item.id === product.id);\r\n\r\n  if (product.quantity > 1) {\r\n    if (btnType === 'plus') {\r\n      newProductList[index].quantity += 1;\r\n    } else {\r\n      newProductList[index].quantity -= 1;\r\n      priceToChange *= -1;\r\n    }\r\n  } else if (product.quantity === 1 && btnType === 'plus') {\r\n    newProductList[index].quantity += 1;\r\n  }\r\n\r\n  return {\r\n    type: CHANGE_PRODUCT_QUANTITY,\r\n    payload: { newProductList, priceToChange },\r\n  };\r\n};\r\n\r\nexport const openCart = () => ({\r\n  type: OPEN_CART,\r\n});\r\n\r\nexport const closeCart = () => ({\r\n  type: CLOSE_CART,\r\n});\r\n\r\nexport const clearBasket = () => ({\r\n  type: CLEAR_BASKET,\r\n});\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport ButtonIcon from 'components/button/ButtonIcon';\r\nimport close from 'assets/icons/close.svg';\r\n\r\nconst FiltersWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 100px 1fr;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  max-width: 500px;\r\n  padding: 0 20px;\r\n  background-color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  transition: 0.4s;\r\n  transform: ${({ isFiltersOpen }) => (isFiltersOpen ? 'translateX(0)' : 'translateX(-100%)')};\r\n  box-shadow: -5px 2px 20px rgba(0, 0, 0, 0.25), 0 0px 0px rgba(0, 0, 0, 0.22);\r\n`;\r\n\r\nconst HeadingWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n  border-bottom: 1px solid lightgrey;\r\n`;\r\n\r\nconst Heading = styled.h3`\r\n  font-size: 1.8rem;\r\n  font-weight: 400;\r\n  margin: 0;\r\n`;\r\n\r\nconst CloseFilters = styled(ButtonIcon)`\r\n  position: absolute;\r\n  padding: 0;\r\n  top: 50%;\r\n  right: 0;\r\n  transform: translateY(-50%);\r\n`;\r\n\r\nconst FilterList = styled.div`\r\n  overflow-y: scroll;\r\n  scrollbar-width: none;\r\n`;\r\n\r\nconst FilterWrapper = styled.div`\r\n  padding: 40px 0;\r\n`;\r\n\r\nconst FilterLabel = styled.h4`\r\n  display: block;\r\n  font-size: 1.6rem;\r\n  font-weight: 400;\r\n  margin: 0;\r\n`;\r\n\r\nconst OptionsWrapper = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  grid-gap: 20px;\r\n  padding: 20px 0;\r\n`;\r\n\r\nconst Option = styled(ButtonIcon)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 1.2rem;\r\n  font-weight: 600;\r\n  color: hsl(195, 100%, 40%);\r\n  border-style: solid;\r\n  border-width: 3px;\r\n  border-color: ${({ active }) => (active ? 'hsl(195, 100%, 40%)' : 'transparent')};\r\n  background-color: ${({ color }) => color || 'hsl(194.1, 63%, 89.4%)'};\r\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\r\n  &:hover {\r\n    border: 3px solid hsl(195, 100%, 40%);\r\n    background-color: ${({ color }) => color || 'hsl(194.1, 63%, 89.4%)'};\r\n  }\r\n`;\r\n\r\nconst filters = {\r\n  sizes: ['XS', 'S', 'M', 'L', 'XL', 'XXL'],\r\n  colors: ['red', 'green', 'blue', 'yellow', 'orange', 'pink', 'gray', 'black', 'white'],\r\n};\r\n\r\nconst Filters = ({ isFiltersOpen, openFilters, filterProducts, activeFilters }) => {\r\n  const [activeFilter, setActiveFilter] = useState([]);\r\n\r\n  const handleActiveFilter = (filterType, value) => {\r\n    let newActiveFilter = activeFilter;\r\n\r\n    if (newActiveFilter.includes(value)) {\r\n      newActiveFilter = newActiveFilter.filter(filter => filter !== value);\r\n    } else {\r\n      newActiveFilter.push(value);\r\n    }\r\n    filterProducts(filterType, value, activeFilters);\r\n    setActiveFilter(newActiveFilter);\r\n  };\r\n\r\n  const sizes = filters.sizes.map(size => (\r\n    <Option\r\n      key={size}\r\n      active={activeFilter.includes(size) && true}\r\n      onClick={() => handleActiveFilter('sizes', size)}\r\n    >\r\n      {size}\r\n    </Option>\r\n  ));\r\n  const colors = filters.colors.map(color => (\r\n    <Option\r\n      key={color}\r\n      active={activeFilter.includes(color) && true}\r\n      color={color}\r\n      onClick={() => handleActiveFilter('colors', color)}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <FiltersWrapper isFiltersOpen={isFiltersOpen}>\r\n      <HeadingWrapper>\r\n        <Heading>Filter</Heading>\r\n        <CloseFilters icon={close} onClick={openFilters} />\r\n      </HeadingWrapper>\r\n      <FilterList>\r\n        <FilterWrapper>\r\n          <FilterLabel>Size</FilterLabel>\r\n          <OptionsWrapper>{sizes}</OptionsWrapper>\r\n        </FilterWrapper>\r\n        <FilterWrapper>\r\n          <FilterLabel>Color</FilterLabel>\r\n          <OptionsWrapper>{colors}</OptionsWrapper>\r\n        </FilterWrapper>\r\n      </FilterList>\r\n    </FiltersWrapper>\r\n  );\r\n};\r\n\r\nFilters.propTypes = {\r\n  isFiltersOpen: PropTypes.bool.isRequired,\r\n  openFilters: PropTypes.func.isRequired,\r\n  filterProducts: PropTypes.func.isRequired,\r\n  activeFilters: PropTypes.shape().isRequired,\r\n};\r\n\r\nexport default Filters;\r\n","const size = {\r\n  mobileS: '320px',\r\n  mobileM: '375px',\r\n  mobileL: '425px',\r\n  tablet: '768px',\r\n  laptop: '1024px',\r\n  laptopL: '1440px',\r\n  desktop: '2560px',\r\n};\r\n\r\nconst device = {\r\n  mobileS: `(min-width: ${size.mobileS})`,\r\n  mobileM: `(min-width: ${size.mobileM})`,\r\n  mobileL: `(min-width: ${size.mobileL})`,\r\n  tablet: `(min-width: ${size.tablet})`,\r\n  laptop: `(min-width: ${size.laptop})`,\r\n  laptopL: `(min-width: ${size.laptopL})`,\r\n  desktop: `(min-width: ${size.desktop})`,\r\n  desktopL: `(min-width: ${size.desktop})`,\r\n};\r\n\r\nexport default device;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport device from 'responsive/Device';\r\nimport arrowDown from 'assets/icons/arrow-down.svg';\r\n\r\nconst options = [\r\n  { value: '', label: 'Sort by' },\r\n  { value: 'latest', label: 'Latest' },\r\n  { value: 'lowestprice', label: 'Price: Low to high' },\r\n  { value: 'highestprice', label: 'Price: High to low' },\r\n];\r\n\r\nconst SortWrapper = styled.form`\r\n  float: left;\r\n  width: 100%;\r\n  @media ${device.mobileL} {\r\n    width: auto;\r\n  }\r\n`;\r\n\r\nconst SortSelect = styled.select`\r\n  width: 100%;\r\n  padding: 8px 40px 8px 20px;\r\n  font-size: 1.4rem;\r\n  border: 1px solid black;\r\n  background-color: white;\r\n  border-radius: 50px;\r\n  appearance: none;\r\n  background-image: url(${arrowDown});\r\n  background-repeat: no-repeat;\r\n  background-size: 10px;\r\n  background-position: calc(100% - 15px) 7px;\r\n`;\r\n\r\nconst SortOption = styled.option`\r\n  font-size: 1.4rem;\r\n`;\r\n\r\nconst Sort = ({ sortProducts, products }) => {\r\n  const createOptions = options.map(option => (\r\n    <SortOption value={option.value} key={option.value}>\r\n      {option.label}\r\n    </SortOption>\r\n  ));\r\n\r\n  return (\r\n    <SortWrapper>\r\n      <SortSelect onChange={e => sortProducts(e.target.value, products)}>\r\n        {createOptions}\r\n      </SortSelect>\r\n    </SortWrapper>\r\n  );\r\n};\r\n\r\nSort.propTypes = {\r\n  sortProducts: PropTypes.func.isRequired,\r\n  products: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nexport default Sort;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n// import AppContext from 'context';\r\nimport PropTypes from 'prop-types';\r\nimport Button from 'components/button/Button';\r\nimport MediumLabel from 'components/label/MediumLabel';\r\nimport { connect } from 'react-redux';\r\nimport { addProduct as addProductAction } from 'services/cart/actions';\r\n\r\nconst ProductImg = styled.img`\r\n  height: 400px;\r\n  width: 300px;\r\n  display: block;\r\n`;\r\n\r\nconst ProductWrapper = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\r\n`;\r\n\r\nconst InnerWrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  padding: 20px;\r\n  background-color: rgba(255, 255, 255, 1);\r\n`;\r\n\r\nconst Price = styled.span`\r\n  display: block;\r\n  text-align: center;\r\n  margin: 0 0 20px;\r\n  font-size: 1.4rem;\r\n  font-weight: 400;\r\n`;\r\n\r\nconst AddToCart = styled(Button)`\r\n  width: 100%;\r\n`;\r\n\r\nconst AvailableOptionsWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  padding: 10px 0;\r\n`;\r\n\r\nconst AvailableOptionsLabel = styled(MediumLabel)`\r\n  flex-basis: 100%;\r\n  text-align: left;\r\n  font-weight: 400;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst AvailableOption = styled.span`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-right: 10px;\r\n  flex-basis: 15px;\r\n  height: 15px;\r\n  background-color: ${({ color }) => color || 'white'};\r\n  border-radius: 50%;\r\n  font-size: 1.2rem;\r\n  color: gray;\r\n  box-shadow: ${({ color }) =>\r\n    color ? '0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)' : 'none'};\r\n`;\r\n\r\nconst Product = props => {\r\n  const { product, products, addProduct } = props;\r\n  const { title, price, img, sizes, colors } = product;\r\n\r\n  const availableColors = colors.map(color => <AvailableOption key={color} color={color} />);\r\n  const availableSizes = sizes.map(size => <AvailableOption key={size}>{size}</AvailableOption>);\r\n\r\n  return (\r\n    <ProductWrapper>\r\n      <ProductImg src={img} alt={title} />\r\n      <InnerWrapper>\r\n        <MediumLabel>{title}</MediumLabel>\r\n        <Price>{price}$</Price>\r\n        <AvailableOptionsWrapper>\r\n          <AvailableOptionsLabel>Available colors</AvailableOptionsLabel>\r\n          {availableColors}\r\n        </AvailableOptionsWrapper>\r\n\r\n        <AvailableOptionsWrapper>\r\n          <AvailableOptionsLabel>Available sizes</AvailableOptionsLabel>\r\n          {availableSizes}\r\n        </AvailableOptionsWrapper>\r\n        <AddToCart onClick={() => addProduct(product, products)}>Add to cart</AddToCart>\r\n      </InnerWrapper>\r\n    </ProductWrapper>\r\n  );\r\n};\r\n\r\nProduct.propTypes = {\r\n  product: PropTypes.shape({\r\n    title: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    img: PropTypes.string.isRequired,\r\n    sizes: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    colors: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  }).isRequired,\r\n  products: PropTypes.arrayOf(PropTypes.shape()).isRequired,\r\n  addProduct: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const { products } = state.cart;\r\n  return { products };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addProduct: (product, products) => dispatch(addProductAction(product, products)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Product);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport MediumLabel from 'components/label/MediumLabel';\r\nimport Filters from 'components/productList/filters/Filters';\r\nimport Sort from 'components/productList/sort/Sort';\r\nimport Button from 'components/button/Button';\r\nimport PropTypes from 'prop-types';\r\nimport Product from 'components/product/Product';\r\nimport device from 'responsive/Device';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  sortProducts as sortProductsAction,\r\n  openFilters as openFiltersAction,\r\n  filterProducts as filterProductsAction,\r\n} from 'services/productList/actions';\r\n\r\nconst ProductListWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(1, 300px);\r\n  /* grid-auto-columns: 300px; */\r\n  justify-content: center;\r\n  align-items: center;\r\n  grid-gap: 30px;\r\n  position: relative;\r\n  margin: 0 auto;\r\n  padding-top: 40px;\r\n  clear: both;\r\n  @media ${device.tablet} {\r\n    grid-template-columns: repeat(2, 300px);\r\n  }\r\n  @media ${device.laptop} {\r\n    grid-template-columns: repeat(3, 300px);\r\n  }\r\n  @media ${device.laptopL} {\r\n    grid-template-columns: repeat(4, 300px);\r\n  }\r\n`;\r\n\r\nconst ProductListLabel = styled(MediumLabel)`\r\n  text-align: left;\r\n  font-size: 3rem;\r\n  color: hsl(195, 100%, 40%);\r\n  padding: 40px 0;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst FilterBar = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  grid-gap: 20px;\r\n`;\r\n\r\nconst FilterButton = styled(Button)`\r\n  float: left;\r\n  margin: 0;\r\n  padding: 10px 30px;\r\n  width: 100%;\r\n  @media ${device.mobileL} {\r\n    width: auto;\r\n  }\r\n`;\r\n\r\nconst ProductList = ({\r\n  data,\r\n  sortProducts,\r\n  openFilters,\r\n  isFiltersOpen,\r\n  filterProducts,\r\n  activeFilters,\r\n}) => {\r\n  const products = data.map(product => <Product key={product.id} product={product} />);\r\n\r\n  return (\r\n    <>\r\n      <ProductListLabel>React Shopping Cart</ProductListLabel>\r\n      <FilterBar>\r\n        <FilterButton onClick={openFilters}>Filter</FilterButton>\r\n        <Sort sortProducts={sortProducts} products={data} />\r\n      </FilterBar>\r\n      <ProductListWrapper>{products}</ProductListWrapper>\r\n      <Filters\r\n        isFiltersOpen={isFiltersOpen}\r\n        openFilters={openFilters}\r\n        filterProducts={filterProducts}\r\n        activeFilters={activeFilters}\r\n        data={data}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nProductList.propTypes = {\r\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  sortProducts: PropTypes.func.isRequired,\r\n  isFiltersOpen: PropTypes.bool.isRequired,\r\n  openFilters: PropTypes.func.isRequired,\r\n  filterProducts: PropTypes.func.isRequired,\r\n  activeFilters: PropTypes.shape().isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  sortProducts: (value, products) => dispatch(sortProductsAction(value, products)),\r\n  openFilters: () => dispatch(openFiltersAction()),\r\n  filterProducts: (filterType, value, activeFilter) =>\r\n    dispatch(filterProductsAction(filterType, value, activeFilter)),\r\n});\r\n\r\nconst mapStateToProps = state => {\r\n  const { data, isFiltersOpen, activeFilters } = state.productList;\r\n  return { data, isFiltersOpen, activeFilters };\r\n  //  zwraca obiekt z propsem który zostanie podany do tego komponentu\r\n};\r\n//  można to zapisac też w krótszy sposób:\r\n//  const mapStateToProps = ({data}) => ({data});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductList);\r\n// connect przyjmuje z prawej strony komponent a z lewej mapStateToProps oraz mapDispatchToProps\r\n","import { SORT_PRODUCTS, OPEN_FILTERS, FILTER_PRODUCTS } from 'services/actionTypes';\r\nimport dataProducts from 'data';\r\n\r\nexport const sortProducts = (value, products) => {\r\n  if (value === 'latest') {\r\n    products.sort((a, b) => b.addedDate - a.addedDate);\r\n  } else if (value === 'lowestprice') {\r\n    products.sort((a, b) => a.price - b.price);\r\n  } else if (value === 'highestprice') {\r\n    products.sort((a, b) => b.price - a.price);\r\n  }\r\n  return {\r\n    type: SORT_PRODUCTS,\r\n    payload: products,\r\n  };\r\n};\r\n\r\nexport const openFilters = () => ({\r\n  type: OPEN_FILTERS,\r\n});\r\n\r\nexport const filterProducts = (filterType, value, activeFilters, isRange) => {\r\n  let newProductList = [];\r\n  const allProducts = dataProducts;\r\n  let newActiveFilters = activeFilters;\r\n  if (newActiveFilters[filterType]) {\r\n    if (newActiveFilters[filterType].includes(value)) {\r\n      newActiveFilters[filterType] = newActiveFilters[filterType].filter(\r\n        option => option !== value,\r\n      );\r\n      if (newActiveFilters[filterType].length === 0) {\r\n        delete newActiveFilters[filterType];\r\n      }\r\n    } else {\r\n      newActiveFilters[filterType].push(value);\r\n    }\r\n  } else {\r\n    newActiveFilters = { ...newActiveFilters, [filterType]: [value] };\r\n  }\r\n\r\n  const activeFiltersKeys = Object.keys(newActiveFilters);\r\n\r\n  if (activeFiltersKeys.length === 0) {\r\n    newProductList = allProducts;\r\n  } else {\r\n    activeFiltersKeys.forEach((filter, index) => {\r\n      if (index === 0 || isRange) {\r\n        newProductList = allProducts.filter(product => {\r\n          const incomingProductId = product.id;\r\n          let isProductRepeat = false;\r\n          let addProduct = false;\r\n\r\n          newProductList.forEach(item => {\r\n            if (item.id === incomingProductId) {\r\n              isProductRepeat = true;\r\n            }\r\n          });\r\n\r\n          if (!isProductRepeat) {\r\n            addProduct = product[filter].some(item => newActiveFilters[filter].includes(item));\r\n          }\r\n\r\n          return addProduct;\r\n        });\r\n      } else {\r\n        newProductList = newProductList.filter(product => {\r\n          let addProduct = false;\r\n\r\n          addProduct = product[filter].some(item => newActiveFilters[filter].includes(item));\r\n\r\n          return addProduct;\r\n        });\r\n      }\r\n    });\r\n  }\r\n  return {\r\n    type: FILTER_PRODUCTS,\r\n    payload: {\r\n      newActiveFilters,\r\n      newProductList,\r\n    },\r\n  };\r\n};\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\r\n@import url('https://fonts.googleapis.com/css?family=Montserrat:300,700&display=swap');\r\n\r\n*,\r\n*::before,\r\n*::after {\r\n  box-sizing: border-box;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n  html {\r\n    font-size: 62.5%;\r\n  }\r\n\r\n  body {\r\n    font-size: 1.6rem;\r\n    font-family: 'Montserrat', sans-serif;\r\n  }\r\n\r\n  #root{\r\n    position: relative;\r\n  }\r\n\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport Cart from 'components/cart/Cart';\r\nimport ButtonIcon from 'components/button/ButtonIcon';\r\nimport ProductList from 'components/productList/ProductList';\r\nimport cart from 'assets/icons/cart.svg';\r\nimport GlobalStyle from 'theme/GlobalStyle';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { openCart as openCartAction } from 'services/cart/actions';\r\n\r\nconst ViewWrapper = styled.div`\r\n  position: relative;\r\n  background-color: white;\r\n  max-width: 1400px;\r\n  margin: 0 auto;\r\n  padding: 10px;\r\n`;\r\n\r\nconst Blur = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  transition: 0.2s;\r\n  opacity: ${({ isCartOpen }) => (isCartOpen ? 1 : 0)};\r\n  visibility: ${({ isCartOpen }) => (isCartOpen ? 'visible' : 'hidden')};\r\n  background-color: rgba(0, 0, 0, 0.9);\r\n`;\r\n\r\nconst CartButton = styled(ButtonIcon)`\r\n  height: 60px;\r\n  width: 60px;\r\n  position: fixed;\r\n  top: 100vh;\r\n  right: 40px;\r\n  transform: translateY(calc(-100% - 30px));\r\n  border-radius: 50%;\r\n  border: none;\r\n  color: white;\r\n  font-weight: 700;\r\n  font-size: 1.3rem;\r\n  letter-spacing: 0.5px;\r\n  text-transform: uppercase;\r\n  transition: 0.2s;\r\n  cursor: pointer;\r\n  background-color: ${({ color }) => color || 'hsl(195, 100%, 40%)'};\r\n  &:hover {\r\n    transform: translateY(calc(-100% - 30px)) scale(1.1);\r\n  }\r\n`;\r\n\r\nconst AppContainer = ({ isCartOpen, openCart }) => {\r\n  return (\r\n    <>\r\n      <ViewWrapper>\r\n        <ProductList />\r\n        <Blur isCartOpen={isCartOpen} />\r\n      </ViewWrapper>\r\n      <Cart />\r\n      <CartButton icon={cart} onClick={openCart} />\r\n      <GlobalStyle />\r\n    </>\r\n  );\r\n};\r\n\r\nAppContainer.propTypes = {\r\n  isCartOpen: PropTypes.bool.isRequired,\r\n  openCart: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const { isCartOpen } = state.cart;\r\n  return { isCartOpen };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  openCart: () => dispatch(openCartAction()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppContainer);\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from 'services/store';\r\nimport RootContainer from 'containers/RootContainer';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <RootContainer />\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from 'views/root/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}