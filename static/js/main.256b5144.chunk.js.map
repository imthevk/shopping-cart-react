{"version":3,"sources":["assets/icons/close.svg","assets/icons/remove.svg","assets/icons/arrow-down.svg","assets/icons/cart.svg","services/cart/reducer.js","services/cart/actionTypes.js","services/productList/reducer.js","services/productList/actionTypes.js","services/reducers.js","services/store.js","components/button/Button.js","components/button/ButtonIcon.js","components/label/MediumLabel.js","components/cart/cartItem/CartItem.js","components/cart/Cart.js","services/cart/actions.js","components/productList/filters/Filters.js","components/productList/sort/Sort.js","components/product/Product.js","responsive/Device.js","components/productList/ProductList.js","services/productList/actions.js","theme/GlobalStyle.js","containers/RootContainer.js","views/root/App.js","index.js"],"names":["module","exports","initialState","isCartOpen","products","totalPrice","cartReducer","state","action","type","product","payload","newProductList","productIndex","map","item","id","indexOf","total","price","quantity","push","filter","btnType","productPos","findIndex","console","log","dataProducts","title","sizes","colors","img","addedDate","data","isFiltersOpen","activeFilters","productListReducer","value","sort","a","b","filterType","filteredList","includes","option","length","Object","keys","forEach","index1","filterValue","index2","combineReducers","cart","productList","store","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","Button","styled","button","color","ButtonIcon","icon","MediumLabel","h3","ItemWrapper","div","ItemImage","InnerWrapper","Title","Price","span","QuantityForm","form","QuantityButton","input","QuantityInput","Remove","CartItem","props","removeProduct","changeProductQuantity","src","alt","onClick","disabled","name","remove","CartWrapper","HeadingWrapper","Heading","CloseCart","ItemsWrapper","SummaryWrapper","TotalWrapper","Total","EmptyCart","connect","dispatch","closeCart","clearBasket","removeProductAction","changeProductQuantityAction","cartItems","key","close","FiltersWrapper","CloseFilters","FilterList","FilterWrapper","FilterLabel","h4","OptionsWrapper","Option","filters","Filters","openFilters","filterProducts","size","options","label","SortWrapper","SortSelect","select","arrowDown","SortOption","Sort","sortProducts","createOptions","onChange","e","target","ProductImg","ProductWrapper","AddToCart","addProduct","addProductAction","device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","ProductListWrapper","ProductListLabel","FilterButton","sortProductsAction","filterProductsAction","GlobalStyle","createGlobalStyle","ViewWrapper","Blur","CartButton","openCart","App","RootContainer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.256b5144.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/close.ea4d4547.svg\";","module.exports = __webpack_public_path__ + \"static/media/remove.67b8cf8c.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow-down.63fbce54.svg\";","module.exports = __webpack_public_path__ + \"static/media/cart.0de0451e.svg\";","import {\r\n  ADD_PRODUCT,\r\n  REMOVE_PRODUCT,\r\n  CHANGE_PRODUCT_QUANTITY,\r\n  CLOSE_CART,\r\n  OPEN_CART,\r\n  CLEAR_BASKET,\r\n} from 'services/cart/actionTypes';\r\n\r\nconst initialState = {\r\n  isCartOpen: false,\r\n  products: [],\r\n  totalPrice: 0,\r\n};\r\n\r\nconst cartReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_PRODUCT: {\r\n      let product = action.payload;\r\n      const newProductList = state.products;\r\n      const productIndex = newProductList.map(item => item.id).indexOf(product.id);\r\n      const total = state.totalPrice + product.price;\r\n      if (productIndex !== -1) {\r\n        newProductList[productIndex].quantity += 1;\r\n      } else {\r\n        product = { ...product, quantity: 1 };\r\n        newProductList.push(product);\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        products: [...newProductList],\r\n        isCartOpen: true,\r\n        totalPrice: total,\r\n      };\r\n    }\r\n\r\n    case REMOVE_PRODUCT: {\r\n      const product = action.payload;\r\n      const newProductList = state.products.filter(item => item.id !== product.id);\r\n      const total = state.totalPrice - product.price * product.quantity;\r\n\r\n      return {\r\n        ...state,\r\n        products: [...newProductList],\r\n        totalPrice: total,\r\n      };\r\n    }\r\n\r\n    case CHANGE_PRODUCT_QUANTITY: {\r\n      const { btnType, product } = action.payload;\r\n      const { products, totalPrice } = state;\r\n\r\n      const newProductList = products;\r\n      let total = totalPrice;\r\n\r\n      const productPos = newProductList.findIndex(item => item.id === product.id);\r\n\r\n      if (product.quantity > 1) {\r\n        if (btnType === 'plus') {\r\n          newProductList[productPos].quantity += 1;\r\n          total += newProductList[productPos].price;\r\n        } else {\r\n          newProductList[productPos].quantity -= 1;\r\n          total -= newProductList[productPos].price;\r\n        }\r\n      } else if (product.quantity === 1 && btnType === 'plus') {\r\n        newProductList[productPos].quantity += 1;\r\n        total += newProductList[productPos].price;\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        products: [...newProductList],\r\n        totalPrice: total,\r\n      };\r\n    }\r\n\r\n    case OPEN_CART: {\r\n      console.log(state);\r\n      return {\r\n        ...state,\r\n        isCartOpen: true,\r\n      };\r\n    }\r\n\r\n    case CLOSE_CART:\r\n      return {\r\n        ...state,\r\n        isCartOpen: false,\r\n      };\r\n\r\n    case CLEAR_BASKET:\r\n      return {\r\n        ...state,\r\n        products: [],\r\n        totalPrice: 0,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cartReducer;\r\n","export const OPEN_CART = 'OPEN_CART';\r\nexport const ADD_PRODUCT = 'ADD_PRODUCT';\r\nexport const REMOVE_PRODUCT = 'REMOVE_PRODUCT';\r\nexport const CHANGE_PRODUCT_QUANTITY = 'CHANGE_PRODUCT_QUANTITY';\r\nexport const CLOSE_CART = 'CLOSE_CART';\r\nexport const CLEAR_BASKET = 'CLEAR_BASKET';\r\n","import { SORT_PRODUCTS, OPEN_FILTERS, FILTER_PRODUCTS } from 'services/productList/actionTypes';\r\n\r\nconst dataProducts = [\r\n  {\r\n    id: 1,\r\n    title: 'Jacket',\r\n    price: 379,\r\n    sizes: ['XS', 'S', 'M', 'L', 'XL', 'XXL'],\r\n    colors: ['red', 'green', 'blue', 'gray', 'black', 'white'],\r\n    img: 'https://source.unsplash.com/300x400',\r\n    addedDate: 1578787200 /* mm/dd/yyyy 01/12/2020 */,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Jeans',\r\n    price: 249,\r\n    sizes: ['XS', 'XXL'],\r\n    colors: ['red', 'green', 'blue', 'yellow', 'orange'],\r\n    img: 'https://source.unsplash.com/300x400',\r\n    addedDate: 1566259200 /* 08/20/2019 */,\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Sweatshirt',\r\n    price: 79,\r\n    sizes: ['S', 'M', 'L'],\r\n    colors: ['black', 'white'],\r\n    img: 'https://source.unsplash.com/300x400',\r\n    addedDate: 1575504000 /* 12/05/2019 */,\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Socks',\r\n    price: 24,\r\n    sizes: ['S', 'L', 'XXL'],\r\n    colors: ['red', 'blue', 'orange', 'pink', 'black', 'white'],\r\n    img: 'https://source.unsplash.com/300x400',\r\n    addedDate: 1581638400 /* 02/14/2020 */,\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Hoody',\r\n    price: 129,\r\n    sizes: ['XL', 'XXL'],\r\n    colors: ['blue', 'yellow', 'orange', 'pink', 'gray'],\r\n    img: 'https://source.unsplash.com/300x400',\r\n    addedDate: 1556755200 /* 05/02/2019 */,\r\n  },\r\n  {\r\n    id: 6,\r\n    title: 'Boots',\r\n    price: 289,\r\n    sizes: ['XS', 'S'],\r\n    colors: ['red', 'green', 'yellow', 'orange', 'gray', 'black'],\r\n    img: 'https://source.unsplash.com/300x400',\r\n    addedDate: 1562284800 /* 07/05/2019 */,\r\n  },\r\n];\r\n\r\nconst initialState = {\r\n  data: dataProducts,\r\n  isFiltersOpen: false,\r\n  activeFilters: {},\r\n};\r\n\r\nconst productListReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SORT_PRODUCTS: {\r\n      const { value, products } = action.payload;\r\n      if (value === 'latest') {\r\n        products.sort((a, b) => b.addedDate - a.addedDate);\r\n      } else if (value === 'lowestprice') {\r\n        products.sort((a, b) => a.price - b.price);\r\n      } else if (value === 'highestprice') {\r\n        products.sort((a, b) => b.price - a.price);\r\n      }\r\n      return {\r\n        ...state,\r\n        data: [...products],\r\n      };\r\n    }\r\n\r\n    case OPEN_FILTERS:\r\n      return {\r\n        ...state,\r\n        isFiltersOpen: !state.isFiltersOpen,\r\n      };\r\n\r\n    case FILTER_PRODUCTS: {\r\n      const { filterType, value } = action.payload;\r\n      let { activeFilters } = state;\r\n      let filteredList = dataProducts;\r\n\r\n      if (activeFilters[filterType]) {\r\n        if (activeFilters[filterType].includes(value)) {\r\n          activeFilters[filterType] = activeFilters[filterType].filter(option => option !== value);\r\n          if (activeFilters[filterType].length === 0) {\r\n            delete activeFilters[filterType];\r\n          }\r\n        } else {\r\n          activeFilters[filterType] = [...activeFilters[filterType], value];\r\n        }\r\n      } else {\r\n        activeFilters = { ...activeFilters, [filterType]: [value] };\r\n      }\r\n\r\n      Object.keys(activeFilters).forEach((filter, index1) => {\r\n        if (activeFilters[filter].length !== 0) {\r\n          activeFilters[filter].forEach((filterValue, index2) => {\r\n            if (index1 === 0 && index2 === 0) {\r\n              filteredList = filteredList.filter(\r\n                product =>\r\n                  product[Object.keys(activeFilters)[0]].includes(\r\n                    activeFilters[Object.keys(activeFilters)[0]][0],\r\n                  ) === true,\r\n              );\r\n            } else {\r\n              filteredList = filteredList.filter(\r\n                product => product[filter].includes(filterValue) === true,\r\n              );\r\n            }\r\n          });\r\n        }\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        data: filteredList,\r\n        activeFilters,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default productListReducer;\r\n","export const SORT_PRODUCTS = 'SORT_PRODUCTS';\r\nexport const OPEN_FILTERS = 'OPEN_FILTERS';\r\nexport const FILTER_PRODUCTS = 'FILTER_PRODUCTS';\r\n","import { combineReducers } from 'redux';\r\nimport cartReducer from 'services/cart/reducer';\r\nimport productListReducer from 'services/productList/reducer';\r\n\r\nexport default combineReducers({\r\n  cart: cartReducer,\r\n  productList: productListReducer,\r\n});\r\n","import { createStore } from 'redux';\r\nimport rootReducer from 'services/reducers';\r\n\r\n/* eslint-disable no-underscore-dangle */\r\n\r\nconst store = createStore(\r\n  rootReducer /* preloadedState, */,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n);\r\n\r\n/* eslint-enable */\r\n\r\nexport default store;\r\n","import styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  display: block;\r\n  border: none;\r\n  border-radius: 50px;\r\n  color: white;\r\n  font-weight: 700;\r\n  font-size: 1.3rem;\r\n  letter-spacing: 0.5px;\r\n  text-transform: uppercase;\r\n  padding: 10px 20px;\r\n  margin: 5px 0;\r\n  cursor: pointer;\r\n  transition: 0.2s;\r\n  background-color: ${({ color }) => color || 'hsl(195, 100%, 40%)'};\r\n  &:hover {\r\n    background-color: black;\r\n  }\r\n`;\r\n\r\nexport default Button;\r\n","import styled from 'styled-components';\r\n\r\nconst ButtonIcon = styled.button`\r\n  height: 40px;\r\n  width: 40px;\r\n  background-color: lightgrey;\r\n  color: white;\r\n  border-radius: 50%;\r\n  border: none;\r\n  transition: 0.2s;\r\n  background-image: url(${({ icon }) => icon});\r\n  background-repeat: no-repeat;\r\n  background-position: 50% 50%;\r\n  background-size: 40%;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: black;\r\n  }\r\n`;\r\n\r\nexport default ButtonIcon;\r\n","import styled from 'styled-components';\r\n\r\nconst MediumLabel = styled.h3`\r\n  text-align: center;\r\n  margin: 0 0 5px;\r\n  font-size: 1.4rem;\r\n  font-weight: 700;\r\n`;\r\n\r\nexport default MediumLabel;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport MediumLabel from 'components/label/MediumLabel';\r\nimport ButtonIcon from 'components/button/ButtonIcon';\r\nimport remove from 'assets/icons/remove.svg';\r\n\r\nconst ItemWrapper = styled.div`\r\n  padding: 30px;\r\n  display: grid;\r\n  grid-template-columns: 90px 1fr 40px;\r\n  grid-gap: 15px;\r\n  border-bottom: 1px solid lightgrey;\r\n`;\r\n\r\nconst ItemImage = styled.img`\r\n  width: 100%;\r\n  min-height: 120px;\r\n  display: block;\r\n`;\r\n\r\nconst InnerWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Title = styled(MediumLabel)`\r\n  text-align: left;\r\n  margin: 0;\r\n`;\r\n\r\nconst Price = styled.span`\r\n  text-align: left;\r\n  margin: 5px 0 10px;\r\n  font-size: 1.4rem;\r\n  font-weight: 400;\r\n`;\r\n\r\nconst QuantityForm = styled.form`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 40px);\r\n  grid-template-rows: 40px;\r\n  grid-gap: 3px;\r\n`;\r\n\r\nconst QuantityButton = styled.input`\r\n  border: 1px solid lightgrey;\r\n  background-color: white;\r\n  font-size: 1.4rem;\r\n  transition: 0.2s;\r\n  &:hover {\r\n    color: white;\r\n    background-color: black;\r\n  }\r\n`;\r\n\r\nconst QuantityInput = styled.input`\r\n  border: 1px solid lightgrey;\r\n  background-color: white;\r\n  font-size: 1.4rem;\r\n  text-align: center;\r\n`;\r\n\r\nconst Remove = styled(ButtonIcon)`\r\n  &:hover {\r\n    background-color: red;\r\n  }\r\n`;\r\n\r\nconst CartItem = props => {\r\n  const { removeProduct, changeProductQuantity, product } = props;\r\n  const { id, title, img, price, quantity } = product;\r\n\r\n  return (\r\n    <ItemWrapper>\r\n      <ItemImage src={img} alt={title} />\r\n      <InnerWrapper>\r\n        <Title>{title}</Title>\r\n        <Price>{price}$</Price>\r\n        <QuantityForm>\r\n          <QuantityButton\r\n            type=\"button\"\r\n            value=\"-\"\r\n            onClick={() => changeProductQuantity('minus', product)}\r\n            disabled={product.quantity === 1 && true}\r\n          />\r\n          <QuantityInput type=\"text\" value={quantity} name={id} disabled />\r\n          <QuantityButton\r\n            type=\"button\"\r\n            value=\"+\"\r\n            onClick={() => changeProductQuantity('plus', product)}\r\n          />\r\n        </QuantityForm>\r\n      </InnerWrapper>\r\n      <Remove icon={remove} onClick={() => removeProduct(product)} />\r\n    </ItemWrapper>\r\n  );\r\n};\r\n\r\nCartItem.propTypes = {\r\n  product: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    img: PropTypes.string.isRequired,\r\n    quantity: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n  removeProduct: PropTypes.func.isRequired,\r\n  changeProductQuantity: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CartItem;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport Button from 'components/button/Button';\r\nimport ButtonIcon from 'components/button/ButtonIcon';\r\nimport MediumLabel from 'components/label/MediumLabel';\r\nimport close from 'assets/icons/close.svg';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  closeCart as closeCartAction,\r\n  clearBasket as clearBasketAction,\r\n  removeProduct as removeProductAction,\r\n  changeProductQuantity as changeProductQuantityAction,\r\n} from 'services/cart/actions';\r\nimport CartItem from './cartItem/CartItem';\r\n\r\nconst CartWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 100px 1fr 200px;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  max-width: 500px;\r\n  padding: 0 20px;\r\n  background-color: white;\r\n  position: fixed;\r\n  z-index: 99999;\r\n  top: 0;\r\n  right: 0;\r\n  transition: 0.4s;\r\n  transform: ${({ isCartOpen }) => (isCartOpen ? 'translateX(0)' : 'translateX(100%)')};\r\n  box-shadow: -5px 2px 20px rgba(0, 0, 0, 0.25), 0 0px 0px rgba(0, 0, 0, 0.22);\r\n`;\r\n\r\nconst HeadingWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n  border-bottom: 1px solid lightgrey;\r\n`;\r\n\r\nconst Heading = styled.h3`\r\n  font-size: 1.8rem;\r\n  font-weight: 400;\r\n  margin: 0;\r\n`;\r\n\r\nconst CloseCart = styled(ButtonIcon)`\r\n  position: absolute;\r\n  padding: 0;\r\n  top: 50%;\r\n  right: 0;\r\n  transform: translateY(-50%);\r\n`;\r\n\r\nconst ItemsWrapper = styled.div`\r\n  overflow-y: scroll;\r\n  scrollbar-width: none;\r\n`;\r\n\r\nconst SummaryWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: stretch;\r\n  align-items: stretch;\r\n  padding: 30px 0 10px;\r\n`;\r\n\r\nconst TotalWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: auto;\r\n`;\r\n\r\nconst Total = styled(MediumLabel)`\r\n  font-size: 1.8rem;\r\n  font-weight: 400;\r\n`;\r\n\r\nconst Price = styled(MediumLabel)`\r\n  font-size: 1.8rem;\r\n`;\r\n\r\nconst EmptyCart = styled.span`\r\n  display: block;\r\n  text-align: center;\r\n  font-size: 2rem;\r\n  font-weight: 400;\r\n  color: lightgray;\r\n  padding-top: 80px;\r\n`;\r\n\r\nconst Cart = props => {\r\n  const {\r\n    isCartOpen,\r\n    products,\r\n    totalPrice,\r\n    closeCart,\r\n    clearBasket,\r\n    removeProduct,\r\n    changeProductQuantity,\r\n  } = props;\r\n\r\n  const cartItems = products.map(product => (\r\n    <CartItem\r\n      key={product.id}\r\n      product={product}\r\n      changeProductQuantity={changeProductQuantity}\r\n      removeProduct={removeProduct}\r\n    />\r\n  ));\r\n  return (\r\n    <CartWrapper isCartOpen={isCartOpen}>\r\n      <HeadingWrapper>\r\n        <Heading>Your Cart</Heading>\r\n        <CloseCart icon={close} onClick={closeCart} />\r\n      </HeadingWrapper>\r\n      <ItemsWrapper>\r\n        {cartItems.length ? cartItems : <EmptyCart>Your cart is empty...</EmptyCart>}\r\n      </ItemsWrapper>\r\n      <SummaryWrapper>\r\n        <TotalWrapper>\r\n          <Total>Total</Total>\r\n          <Price>{totalPrice}$</Price>\r\n        </TotalWrapper>\r\n        <Button>Checkout</Button>\r\n        <Button color=\"grey\" onClick={clearBasket}>\r\n          Clear basket\r\n        </Button>\r\n      </SummaryWrapper>\r\n    </CartWrapper>\r\n  );\r\n};\r\n\r\nCart.propTypes = {\r\n  isCartOpen: PropTypes.bool.isRequired,\r\n  products: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  closeCart: PropTypes.func.isRequired,\r\n  clearBasket: PropTypes.func.isRequired,\r\n  totalPrice: PropTypes.number.isRequired,\r\n  removeProduct: PropTypes.func.isRequired,\r\n  changeProductQuantity: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const { isCartOpen, products, totalPrice } = state.cart;\r\n  return { isCartOpen, products, totalPrice };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  closeCart: () => dispatch(closeCartAction()),\r\n  clearBasket: () => dispatch(clearBasketAction()),\r\n  removeProduct: product => dispatch(removeProductAction(product)),\r\n  changeProductQuantity: (btnType, product) =>\r\n    dispatch(changeProductQuantityAction(btnType, product)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\r\n","import {\r\n  ADD_PRODUCT,\r\n  REMOVE_PRODUCT,\r\n  CHANGE_PRODUCT_QUANTITY,\r\n  OPEN_CART,\r\n  CLOSE_CART,\r\n  CLEAR_BASKET,\r\n} from 'services/cart/actionTypes';\r\n\r\nexport const addProduct = product => ({\r\n  type: ADD_PRODUCT,\r\n  payload: product,\r\n});\r\n\r\nexport const removeProduct = product => ({\r\n  type: REMOVE_PRODUCT,\r\n  payload: product,\r\n});\r\n\r\nexport const changeProductQuantity = (btnType, product) => ({\r\n  type: CHANGE_PRODUCT_QUANTITY,\r\n  payload: { btnType, product },\r\n});\r\n\r\nexport const openCart = () => ({\r\n  type: OPEN_CART,\r\n});\r\n\r\nexport const closeCart = () => ({\r\n  type: CLOSE_CART,\r\n});\r\n\r\nexport const clearBasket = () => ({\r\n  type: CLEAR_BASKET,\r\n});\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport ButtonIcon from 'components/button/ButtonIcon';\r\nimport close from 'assets/icons/close.svg';\r\n\r\nconst FiltersWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 100px 1fr;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  max-width: 500px;\r\n  padding: 0 30px;\r\n  background-color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  transition: 0.4s;\r\n  /* border-right: 2px solid black; */\r\n  transform: ${({ isFiltersOpen }) => (isFiltersOpen ? 'translateX(0)' : 'translateX(-100%)')};\r\n  box-shadow: -5px 2px 20px rgba(0, 0, 0, 0.25), 0 0px 0px rgba(0, 0, 0, 0.22);\r\n`;\r\n\r\nconst HeadingWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n  border-bottom: 1px solid lightgrey;\r\n`;\r\n\r\nconst Heading = styled.h3`\r\n  font-size: 1.8rem;\r\n  font-weight: 400;\r\n  margin: 0;\r\n`;\r\n\r\nconst CloseFilters = styled(ButtonIcon)`\r\n  position: absolute;\r\n  padding: 0;\r\n  top: 50%;\r\n  right: 0;\r\n  transform: translateY(-50%);\r\n`;\r\n\r\nconst FilterList = styled.div`\r\n  overflow-y: scroll;\r\n  scrollbar-width: none;\r\n`;\r\n\r\nconst FilterWrapper = styled.div`\r\n  padding: 40px 0;\r\n`;\r\n\r\nconst FilterLabel = styled.h4`\r\n  display: block;\r\n  font-size: 1.6rem;\r\n  font-weight: 400;\r\n  margin: 0;\r\n`;\r\n\r\nconst OptionsWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(7, 1fr);\r\n  grid-gap: 20px;\r\n  padding: 20px 0;\r\n`;\r\n\r\nconst Option = styled(ButtonIcon)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 1.2rem;\r\n  font-weight: 600;\r\n  color: hsl(195, 100%, 40%);\r\n  border: 2px solid transparent;\r\n  background-color: ${({ color }) => color || 'hsl(194.1, 63%, 89.4%)'};\r\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\r\n  &:hover {\r\n    border: 2px solid hsl(195, 100%, 40%);\r\n    background-color: ${({ color }) => color || 'hsl(194.1, 63%, 89.4%)'};\r\n  }\r\n`;\r\n\r\nconst filters = {\r\n  sizes: ['XS', 'S', 'M', 'L', 'XL', 'XXL'],\r\n  colors: ['red', 'green', 'blue', 'yellow', 'orange', 'pink', 'gray', 'black', 'white'],\r\n};\r\n\r\nconst Filters = ({ isFiltersOpen, openFilters, filterProducts }) => {\r\n  const sizes = filters.sizes.map(size => (\r\n    <Option key={size} onClick={() => filterProducts('sizes', size)}>\r\n      {size}\r\n    </Option>\r\n  ));\r\n  const colors = filters.colors.map(color => (\r\n    <Option key={color} color={color} onClick={() => filterProducts('colors', color)} />\r\n  ));\r\n\r\n  return (\r\n    <FiltersWrapper isFiltersOpen={isFiltersOpen}>\r\n      <HeadingWrapper>\r\n        <Heading>Filter</Heading>\r\n        <CloseFilters icon={close} onClick={openFilters} />\r\n      </HeadingWrapper>\r\n      <FilterList>\r\n        <FilterWrapper>\r\n          <FilterLabel>Size</FilterLabel>\r\n          <OptionsWrapper>{sizes}</OptionsWrapper>\r\n        </FilterWrapper>\r\n        <FilterWrapper>\r\n          <FilterLabel>Color</FilterLabel>\r\n          <OptionsWrapper>{colors}</OptionsWrapper>\r\n        </FilterWrapper>\r\n      </FilterList>\r\n    </FiltersWrapper>\r\n  );\r\n};\r\n\r\nFilters.propTypes = {\r\n  isFiltersOpen: PropTypes.bool.isRequired,\r\n  openFilters: PropTypes.func.isRequired,\r\n  filterProducts: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filters;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport arrowDown from 'assets/icons/arrow-down.svg';\r\n\r\nconst options = [\r\n  { value: '', label: 'Sort by' },\r\n  { value: 'latest', label: 'Latest' },\r\n  { value: 'lowestprice', label: 'Price: Low to high' },\r\n  { value: 'highestprice', label: 'Price: High to low' },\r\n];\r\n\r\nconst SortWrapper = styled.form`\r\n  margin-left: 30px;\r\n  float: left;\r\n`;\r\n\r\nconst SortSelect = styled.select`\r\n  padding: 8px 40px 8px 20px;\r\n  font-size: 1.4rem;\r\n  border: 1px solid black;\r\n  background-color: white;\r\n  border-radius: 50px;\r\n  appearance: none;\r\n  background-image: url(${arrowDown});\r\n  background-repeat: no-repeat;\r\n  background-size: 6%;\r\n  background-position: 93% 7px;\r\n`;\r\n\r\nconst SortOption = styled.option`\r\n  font-size: 1.4rem;\r\n`;\r\n\r\nconst Sort = ({ sortProducts, products }) => {\r\n  const createOptions = options.map(option => (\r\n    <SortOption value={option.value} key={option.value}>\r\n      {option.label}\r\n    </SortOption>\r\n  ));\r\n\r\n  return (\r\n    <SortWrapper>\r\n      <SortSelect onChange={e => sortProducts(e.target.value, products)}>\r\n        {createOptions}\r\n      </SortSelect>\r\n    </SortWrapper>\r\n  );\r\n};\r\n\r\nSort.propTypes = {\r\n  sortProducts: PropTypes.func.isRequired,\r\n  products: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nexport default Sort;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n// import AppContext from 'context';\r\nimport PropTypes from 'prop-types';\r\nimport Button from 'components/button/Button';\r\nimport MediumLabel from 'components/label/MediumLabel';\r\nimport { connect } from 'react-redux';\r\nimport { addProduct as addProductAction } from 'services/cart/actions';\r\n\r\nconst ProductImg = styled.img`\r\n  min-height: 400px;\r\n  display: block;\r\n`;\r\n\r\nconst ProductWrapper = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\r\n`;\r\n\r\nconst InnerWrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  padding: 20px;\r\n  background-color: rgba(255, 255, 255, 1);\r\n`;\r\n\r\nconst Price = styled.span`\r\n  display: block;\r\n  text-align: center;\r\n  margin: 0 0 20px;\r\n  font-size: 1.4rem;\r\n  font-weight: 400;\r\n`;\r\n\r\nconst AddToCart = styled(Button)`\r\n  width: 100%;\r\n`;\r\n\r\nconst Product = props => {\r\n  const { product, addProduct } = props;\r\n  const { title, price, img } = product;\r\n  return (\r\n    <ProductWrapper>\r\n      <ProductImg src={img} alt={title} />\r\n      <InnerWrapper>\r\n        <MediumLabel>{title}</MediumLabel>\r\n        <Price>{price}$</Price>\r\n        <AddToCart onClick={() => addProduct(product)}>Add to cart</AddToCart>\r\n      </InnerWrapper>\r\n    </ProductWrapper>\r\n  );\r\n};\r\n\r\nProduct.propTypes = {\r\n  product: PropTypes.shape({\r\n    title: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    img: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  addProduct: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addProduct: product => dispatch(addProductAction(product)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Product);\r\n","const size = {\r\n  mobileS: '320px',\r\n  mobileM: '375px',\r\n  mobileL: '425px',\r\n  tablet: '768px',\r\n  laptop: '1024px',\r\n  laptopL: '1440px',\r\n  desktop: '2560px',\r\n};\r\n\r\nconst device = {\r\n  mobileS: `(min-width: ${size.mobileS})`,\r\n  mobileM: `(min-width: ${size.mobileM})`,\r\n  mobileL: `(min-width: ${size.mobileL})`,\r\n  tablet: `(min-width: ${size.tablet})`,\r\n  laptop: `(min-width: ${size.laptop})`,\r\n  laptopL: `(min-width: ${size.laptopL})`,\r\n  desktop: `(min-width: ${size.desktop})`,\r\n  desktopL: `(min-width: ${size.desktop})`,\r\n};\r\n\r\nexport default device;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport MediumLabel from 'components/label/MediumLabel';\r\nimport Filters from 'components/productList/filters/Filters';\r\nimport Sort from 'components/productList/sort/Sort';\r\nimport Button from 'components/button/Button';\r\nimport PropTypes from 'prop-types';\r\nimport Product from 'components/product/Product';\r\nimport device from 'responsive/Device';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  sortProducts as sortProductsAction,\r\n  openFilters as openFiltersAction,\r\n  filterProducts as filterProductsAction,\r\n} from 'services/productList/actions';\r\n\r\nconst ProductListWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(1, 300px);\r\n  /* grid-auto-columns: 300px; */\r\n  justify-content: center;\r\n  align-items: center;\r\n  grid-gap: 30px;\r\n  position: relative;\r\n  margin: 0 auto;\r\n  padding-top: 40px;\r\n  clear: both;\r\n  @media ${device.tablet} {\r\n    grid-template-columns: repeat(2, 300px);\r\n  }\r\n  @media ${device.laptop} {\r\n    grid-template-columns: repeat(3, 300px);\r\n  }\r\n  @media ${device.laptopL} {\r\n    grid-template-columns: repeat(4, 300px);\r\n  }\r\n`;\r\n\r\nconst ProductListLabel = styled(MediumLabel)`\r\n  text-align: left;\r\n  font-size: 3rem;\r\n  color: hsl(195, 100%, 40%);\r\n  padding: 40px 0;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst FilterButton = styled(Button)`\r\n  float: left;\r\n  margin: 0;\r\n  padding: 10px 30px;\r\n`;\r\n\r\nconst ProductList = ({ data, sortProducts, openFilters, isFiltersOpen, filterProducts }) => {\r\n  const products = data.map(product => <Product key={product.id} product={product} />);\r\n  return (\r\n    <>\r\n      <ProductListLabel>React Shopping Cart</ProductListLabel>\r\n      <FilterButton onClick={openFilters}>Filter</FilterButton>\r\n      <Sort sortProducts={sortProducts} products={data} />\r\n      <ProductListWrapper>{products}</ProductListWrapper>\r\n      <Filters\r\n        isFiltersOpen={isFiltersOpen}\r\n        openFilters={openFilters}\r\n        filterProducts={filterProducts}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nProductList.propTypes = {\r\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  sortProducts: PropTypes.func.isRequired,\r\n  isFiltersOpen: PropTypes.bool.isRequired,\r\n  openFilters: PropTypes.func.isRequired,\r\n  filterProducts: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  sortProducts: (value, products) => dispatch(sortProductsAction(value, products)),\r\n  openFilters: () => dispatch(openFiltersAction()),\r\n  filterProducts: (filterType, value) => dispatch(filterProductsAction(filterType, value)),\r\n});\r\n\r\nconst mapStateToProps = state => {\r\n  const { data, isFiltersOpen } = state.productList;\r\n  return { data, isFiltersOpen };\r\n  //  zwraca obiekt z propsem który zostanie podany do tego komponentu\r\n};\r\n//  można to zapisac też w krótszy sposób:\r\n//  const mapStateToProps = ({data}) => ({data});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductList);\r\n// connect przyjmuje z prawej strony komponent a z lewej mapStateToProps oraz mapDispatchToProps\r\n","import { SORT_PRODUCTS, OPEN_FILTERS, FILTER_PRODUCTS } from 'services/productList/actionTypes';\r\n\r\nexport const sortProducts = (value, products) => ({\r\n  type: SORT_PRODUCTS,\r\n  payload: { value, products },\r\n});\r\n\r\nexport const openFilters = () => ({\r\n  type: OPEN_FILTERS,\r\n});\r\n\r\nexport const filterProducts = (filterType, value) => ({\r\n  type: FILTER_PRODUCTS,\r\n  payload: { filterType, value },\r\n});\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\r\n@import url('https://fonts.googleapis.com/css?family=Montserrat:300,700&display=swap');\r\n\r\n*,\r\n*::before,\r\n*::after {\r\n  box-sizing: border-box;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n  html {\r\n    font-size: 62.5%;\r\n  }\r\n\r\n  body {\r\n    font-size: 1.6rem;\r\n    font-family: 'Montserrat', sans-serif;\r\n  }\r\n\r\n  #root{\r\n    position: relative;\r\n  }\r\n\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport Cart from 'components/cart/Cart';\r\nimport ButtonIcon from 'components/button/ButtonIcon';\r\nimport ProductList from 'components/productList/ProductList';\r\nimport cart from 'assets/icons/cart.svg';\r\nimport GlobalStyle from 'theme/GlobalStyle';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { openCart as openCartAction } from 'services/cart/actions';\r\n\r\nconst ViewWrapper = styled.div`\r\n  position: relative;\r\n  background-color: white;\r\n  max-width: 1400px;\r\n  margin: 0 auto;\r\n  padding: 10px;\r\n`;\r\n\r\nconst Blur = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  transition: 0.2s;\r\n  opacity: ${({ isCartOpen }) => (isCartOpen ? 1 : 0)};\r\n  visibility: ${({ isCartOpen }) => (isCartOpen ? 'visible' : 'hidden')};\r\n  background-color: rgba(0, 0, 0, 0.9);\r\n`;\r\n\r\nconst CartButton = styled(ButtonIcon)`\r\n  height: 60px;\r\n  width: 60px;\r\n  position: fixed;\r\n  top: 100vh;\r\n  right: 50px;\r\n  transform: translateY(calc(-100% - 50px));\r\n  border-radius: 50%;\r\n  border: none;\r\n  color: white;\r\n  font-weight: 700;\r\n  font-size: 1.3rem;\r\n  letter-spacing: 0.5px;\r\n  text-transform: uppercase;\r\n  transition: 0.2s;\r\n  cursor: pointer;\r\n  background-color: ${({ color }) => color || 'hsl(195, 100%, 40%)'};\r\n  &:hover {\r\n    transform: translateY(calc(-100% - 50px)) scale(1.1);\r\n  }\r\n`;\r\n\r\nconst AppContainer = ({ isCartOpen, openCart }) => {\r\n  return (\r\n    <>\r\n      <ViewWrapper>\r\n        <ProductList />\r\n        <Blur isCartOpen={isCartOpen} />\r\n      </ViewWrapper>\r\n      <Cart />\r\n      <CartButton icon={cart} onClick={openCart} />\r\n      <GlobalStyle />\r\n    </>\r\n  );\r\n};\r\n\r\nAppContainer.propTypes = {\r\n  isCartOpen: PropTypes.bool.isRequired,\r\n  openCart: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const { isCartOpen } = state.cart;\r\n  return { isCartOpen };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  openCart: () => dispatch(openCartAction()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppContainer);\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from 'services/store';\r\nimport RootContainer from 'containers/RootContainer';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <RootContainer />\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from 'views/root/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}